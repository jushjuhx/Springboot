server.port=8088
#mysql 信息
mysql_username=root
mysql_password=qwer1234
mysql_jdbc_url=jdbc:mysql://localhost:3306/demo?characterEncoding=utf8&characterSetResults=utf8&autoReconnect=true&failOverReadOnly=false
mysql_dirver=com.mysql.cj.jdbc.Driver
##数据库连接有如下两种方式：2选1。其余可参考[SpringBoot2.0整合C3P0、Druid数据库连接池](https://www.suibibk.com/blog/579412311547052032/548423280868982784/552895422985666560)
### 1. 使用默认数据库连接池（Tomcat JDBC Pool），只需要设置如下参数即可，不用添加其他配置
## https://www.cnblogs.com/wanbao/p/9720066.html
#spring.datasource.url=${mysql_jdbc_url}
#spring.datasource.username=${mysql_username}
#spring.datasource.password=${mysql_password}
#spring.datasource.driver-class-name=${mysql_dirver}
### 2. 使用C3P0数据库连接池，加上配置好的configuration/DatasourceConfiguration.java配合使用
c3p0.jdbcUrl=${mysql_jdbc_url}
c3p0.user=${mysql_username}
c3p0.password=${mysql_password}
c3p0.driverClass=${mysql_dirver}
c3p0.minPoolSize=2
c3p0.maxPoolSize=10
c3p0.maxIdleTime=1800000
c3p0.acquireIncrement=3
c3p0.maxStatements=1000
c3p0.initialPoolSize=3
c3p0.idleConnectionTestPeriod=60
c3p0.acquireRetryAttempts=30
c3p0.acquireRetryDelay=1000
c3p0.breakAfterAcquireFailure=false
c3p0.testConnectionOnCheckout=false
##mybatis.type-aliases-package=com.learn.springbootdemo.mapper
##用maven构建项目时，resources 目录就是默认的classpath
mybatis.mapper-locations=classpath:mapper/*.xml
#出现错误时, 直接抛出异常。通过处理该异常可以实现自定义404页面
spring.mvc.throw-exception-if-no-handler-found=true

#不要为我们工程中的资源文件建立映射
spring.resources.add-mappings=false
